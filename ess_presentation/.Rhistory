group_by(region) %>%
summarize(avg_age = first(avg_ageb)) %>%
ggplot(aes(order(region, avg_age), avg_age)) +
geom_col()
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region) %>%
summarize(avg_age = first(avg_ageb))
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region) %>%
summarize(avg_age = first(avg_ageb))
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region) %>%
summarize(avg_age = first(avg_ageb)) %>%
ggplot(aes(x = region, y = avg_age)) +
geom_col()
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region) %>%
summarize(avg_age = first(avg_ageb)) %>%
ggplot(aes(x = region, y = avg_age)) +
geom_col() +
coord_flip()
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region) %>%
summarize(avg_age = first(avg_ageb)) %>%
arrange(avg_age) %>%
ggplot(aes(x = region, y = avg_age)) +
geom_col() +
coord_flip()
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region) %>%
summarize(avg_age = first(avg_ageb)) %>%
ggplot(aes(x = reorder(region, avg_age), y = avg_age)) +
geom_col() +
coord_flip()
?reorder
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region) %>%
summarize(avg_age = first(avg_ageb)) %>%
ggplot(aes(x = region, y = avg_age)) +
geom_col() +
coord_flip()
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(as.factor(region)) %>%
summarize(avg_age = first(avg_ageb))
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region =as.factor(region)) %>%
summarize(avg_age = first(avg_ageb))
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region =as.factor(region)) %>%
summarize(avg_age = first(avg_ageb)) %>%
ggplot(aes(x = reorder(region, avg_age), y = avg_age)) +
geom_col() +
coord_flip()
ess_country
all_fertility
all_fertility %>%
filter(str_detect(geo, "^ES"),
time >= "2006-01-01",
time <  "2007-01-01",
indic_de == "AGEMOTH")
all_fertility %>%
filter(str_detect(geo, "^ES"),
time >= "2006-01-01",
time <  "2007-01-01",
indic_de == "AGEMOTH") %>%
separate(geo, c("cntry", "region"), sep = 2)
all_fertility %>%
filter(str_detect(geo, "^ES"),
time >= "2006-01-01",
time <  "2007-01-01",
indic_de == "AGEMOTH") %>%
separate(geo, c("cntry", "region"), sep = 2) %>%
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>%
filter(!is.na(region))
reg_indicator <-
all_fertility %>%
filter(str_detect(geo, "^ES"),
time >= "2006-01-01",
time <  "2007-01-01",
indic_de == "AGEMOTH") %>%
separate(geo, c("cntry", "region"), sep = 2) %>%
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>%
filter(!is.na(region))
reg_indicator
# Chunk 2
library(ess)
# Chunk 3
show_rounds()
# Chunk 5
invisible(capture.output(all_rnds <- ess_rounds(1:8, "cimentadaj@gmail.com")))
# Chunk 6
all_vars <- lapply(all_rnds, names)
common_vars <- Reduce(function(x, y) intersect(x, y), all_vars)
common_vars
# Chunk 7
attr(all_rnds[[3]]$pray, "label")
attr(all_rnds[[3]]$pray, "labels")
filtered_df <- lapply(all_rnds, function(x) x[c("name", "cntry", "pray")])
# Chunk 8
library(tidyverse)
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
# Chunk 9
show_countries()
# Chunk 10
show_country_rounds("Spain")
# Chunk 2
library(ess)
# Chunk 3
show_rounds()
# Chunk 5
invisible(capture.output(all_rnds <- ess_rounds(1:8, "cimentadaj@gmail.com")))
# Chunk 6
all_vars <- lapply(all_rnds, names)
common_vars <- Reduce(function(x, y) intersect(x, y), all_vars)
common_vars
# Chunk 7
attr(all_rnds[[3]]$pray, "label")
attr(all_rnds[[3]]$pray, "labels")
filtered_df <- lapply(all_rnds, function(x) x[c("name", "cntry", "pray")])
# Chunk 8
library(tidyverse)
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
# Chunk 9
show_countries()
# Chunk 10
show_country_rounds("Spain")
es_three <- ess_country("Spain", 3, "your_registered@email.com")
es_three <- ess_country("Spain", 3, "cimentadaj@gmail.com")
library(eurostat)
all_fertility <- get_eurostat("demo_r_find2")
reg_indicator <-
all_fertility %>%
filter(str_detect(geo, "^ES"),
time >= "2006-01-01",
time <  "2007-01-01",
indic_de == "AGEMOTH") %>%
separate(geo, c("cntry", "region"), sep = 2) %>%
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>%
filter(!is.na(region))
region_es <-
ess_three %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
es_three -> ess_three
region_es <-
ess_three %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
region_es <-
ess_three[[1]] %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
region_es
region_es %>%
group_by(region) %>%
summarize(avg = mean(avg_ageb))
labels_reg <- cimentadaj::reverse_name(attr(all_rnds[[3]]$regioaes, "labels"))
labels_reg <- iconv(labels_reg, "latin1", "UTF-8")
labels_reg
region_es %>%
mutate(region = labels_reg[region]) %>%
group_by(region = as.factor(region)) %>%
summarize(avg_age = first(avg_ageb)) %>%
ggplot(aes(x = reorder(region, avg_age), y = avg_age)) +
geom_col() +
coord_flip()
library(ess)
library(purrr)
library(dplyr)
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
# Explore which rounds are available
show_rounds()
# Choose the ones you're interested
all_rnds <- ess_rounds(1:8, "your_registered@email.com")
all_rnds <- ess_rounds(1:8, "cimentadaj@gmail.com")
# Let's merge the data
# filter only some countries and non missing values
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
# subset only a few variables
filtered_df <- lapply(all_rnds, function(x) x[c("name", "cntry", "pray")])
# Let's merge the data
# filter only some countries and non missing values
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = grep("^ESS[0-9]{1,}", name, value = TRUE))
?grep
grep("[a-z]", letters)
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}"))
library(stringr)
# Let's merge the data
# filter only some countries and non missing values
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
library(ggplot2)
# Let's merge the data
# filter only some countries and non missing values
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
# Explore which country/rounds are available
show_countries()
# Let's work with Spain but how many rounds has it participated in?
show_country_rounds("Spain")
library(eurostat)
all_fertility <- get_eurostat("demo_r_find2")
all_fertility
all_fertility %>%
filter(str_detect(geo, "^ES"),
time >= "2006-01-01",
time <  "2007-01-01",
indic_de == "AGEMOTH")
reg_indicator <-
all_fertility %>%
filter(str_detect(geo, "^ES"), # only select ES (Spain)
time >= "2006-01-01", # we want values from 2006
time <  "2007-01-01", # to match ESS3
indic_de == "AGEMOTH") %>% # select age at first birth of mother
separate(geo, c("cntry", "region"), sep = 2) %>% # create region indicator
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>% # clean up
filter(!is.na(region))
library(tidyverse)
reg_indicator <-
all_fertility %>%
filter(str_detect(geo, "^ES"), # only select ES (Spain)
time >= "2006-01-01", # we want values from 2006
time <  "2007-01-01", # to match ESS3
indic_de == "AGEMOTH") %>% # select age at first birth of mother
separate(geo, c("cntry", "region"), sep = 2) %>% # create region indicator
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>% # clean up
filter(!is.na(region))
reg_indicator
ess_three[[1]]
ls()
cimentadaj::reverse_name
install.packages("ess")
install.packages("ess")
system("open .")
library(ess)
library(tidyverse)
your_registered_email <- "cimentadaj@gmail.com"
# Explore which rounds are available
show_rounds()
# Choose the ones you're interested
all_rnds <- ess_rounds(1:8, your_registered_email)
# subset only a few variables
filtered_df <- lapply(all_rnds, function(x) x[c("name", "cntry", "pray")])
# Let's merge the data
# filter only some countries and non missing values
filtered_df %>%
reduce(rbind) %>%
filter(cntry %in% c("DK", "CZ", "ES"),
pray <= 7) %>%
mutate(name = str_extract(name, "^ESS[0-9]{1,}")) %>%
group_by(name, cntry) %>%
summarize(avg_pray = mean(pray, na.rm = TRUE)) %>%
ggplot(aes(name, avg_pray, group = cntry, colour = cntry)) +
geom_line()
# Very little effort!
# Explore which country/rounds are available
show_countries()
# Let's work with Spain but how many rounds has it participated in?
show_country_rounds("Spain")
# Then let's download it
ess_three <- ess_country("Spain", 3, your_registered_email)
# Let's merge it with some eurostat data
install.packages("eurostat")
library(eurostat)
all_fertility <- get_eurostat("demo_r_find2")
reg_indicator <-
all_fertility %>%
filter(str_detect(geo, "^ES"), # only select ES (Spain)
time >= "2006-01-01", # we want values from 2006
time <  "2007-01-01", # to match ESS3
indic_de == "AGEMOTH") %>% # select age at first birth of mother
separate(geo, c("cntry", "region"), sep = 2) %>% # create region indicator
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>% # clean up
filter(!is.na(region))
# merge the Spain's third round with the regional data
region_es <-
ess_three[[1]] %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
# get the regional labels
labels_reg <-
attr(all_rnds[[1]]$regioaes, "labels") %>%
{setNames(names(.), .)}
# correct for the wrong encoding
labels_reg <- iconv(labels_reg, "latin1", "UTF-8")
region_es %>%
mutate(region = labels_reg[region]) %>% # recoding region form number to character
group_by(region = as.factor(region)) %>% # create as factor
summarize(avg_age = first(avg_ageb)) %>% # get the avg age of first birth
ggplot(aes(x = reorder(region, avg_age), y = avg_age)) +
geom_col() +
coord_flip()
### Downloading files
ess_rounds(1:3, your_registered_email, only_download = TRUE, output_dir = getwd())
# merge the Spain's third round with the regional data
region_es <-
ess_three[[1]] %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
ess_three[[1]]
ess_three
install.packages("ess")
library(ess)
ess_three <- ess_country("Spain", 3, your_registered_email)
library(eurostat)
all_fertility <- get_eurostat("demo_r_find2")
reg_indicator <-
all_fertility %>%
filter(str_detect(geo, "^ES"), # only select ES (Spain)
time >= "2006-01-01", # we want values from 2006
time <  "2007-01-01", # to match ESS3
indic_de == "AGEMOTH") %>% # select age at first birth of mother
separate(geo, c("cntry", "region"), sep = 2) %>% # create region indicator
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>% # clean up
filter(!is.na(region))
# merge the Spain's third round with the regional data
region_es <-
ess_three %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
# get the regional labels
labels_reg <-
attr(all_rnds[[1]]$regioaes, "labels") %>%
{setNames(names(.), .)}
ess_three
# Then let's download it
ess_three <- ess_country("Spain", 3, your_registered_email)
ess_three
install.packages("ess")
library(ess)
# Then let's download it
ess_three <- ess_country("Spain", 3, your_registered_email)
library(ess)
library(tidyverse)
your_registered_email <- "cimentadaj@gmail.com"
ess_three <- ess_country("Spain", 3, your_registered_email)
ess_three
# merge the Spain's third round with the regional data
region_es <-
ess_three[[1]] %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
all_fertility <- get_eurostat("demo_r_find2")
library(eurostat)
all_fertility <- get_eurostat("demo_r_find2")
reg_indicator <-
all_fertility %>%
filter(str_detect(geo, "^ES"), # only select ES (Spain)
time >= "2006-01-01", # we want values from 2006
time <  "2007-01-01", # to match ESS3
indic_de == "AGEMOTH") %>% # select age at first birth of mother
separate(geo, c("cntry", "region"), sep = 2) %>% # create region indicator
transmute(cntry,
region = ifelse(region == "", NA, region),
avg_ageb = values) %>% # clean up
filter(!is.na(region))
# merge the Spain's third round with the regional data
region_es <-
ess_three[[1]] %>%
transmute(cntry,
region = as.character(regioaes),
pray) %>%
filter(cntry == "ES") %>%
left_join(reg_indicator, c("cntry", "region"))
# get the regional labels
labels_reg <-
attr(all_rnds[[1]]$regioaes, "labels") %>%
{setNames(names(.), .)}
# correct for the wrong encoding
labels_reg <- iconv(labels_reg, "latin1", "UTF-8")
region_ess %>%
mutate(region = labels_reg[region]) %>% # recoding region form number to character
group_by(region = as.factor(region)) %>% # create as factor
summarize(avg_age = first(avg_ageb)) %>% # get the avg age of first birth
ggplot(aes(x = reorder(region, avg_age), y = avg_age)) +
geom_col() +
coord_flip()
region_es %>%
mutate(region = labels_reg[region]) %>% # recoding region form number to character
group_by(region = as.factor(region)) %>% # create as factor
summarize(avg_age = first(avg_ageb)) %>% # get the avg age of first birth
ggplot(aes(x = reorder(region, avg_age), y = avg_age)) +
geom_col() +
coord_flip()
# get the regional labels
labels_reg <-
attr(ess_three[[1]]$regioaes, "labels") %>%
{setNames(names(.), .)}
# correct for the wrong encoding
labels_reg <- iconv(labels_reg, "latin1", "UTF-8")
region_es %>%
mutate(region = labels_reg[region]) %>% # recoding region form number to character
group_by(region = as.factor(region)) %>% # create as factor
summarize(avg_age = first(avg_ageb)) %>% # get the avg age of first birth
ggplot(aes(x = reorder(region, avg_age), y = avg_age)) +
geom_col() +
coord_flip()
library(ess)
library(tidyverse)
your_registered_email <- "cimentadaj@gmail.com"
# Explore which rounds are available
show_rounds()
# Choose the ones you're interested
all_rnds <- ess_rounds(1:8, your_registered_email)
